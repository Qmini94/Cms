plugins {
    id 'java'
    id "org.springframework.boot" version "2.7.12"
    id 'io.spring.dependency-management' version '1.1.7'
}

group = "kr.co.itid"
version = "1.0.0-SNAPSHOT"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

javadoc {
    failOnError = false
    options.encoding = 'UTF-8'
    options.charSet = 'UTF-8'
    options.locale = 'ko_KR'         // 한국어 지역 설정
    options.author = true
    options.version = true
    options.links("https://docs.oracle.com/en/java/javase/17/docs/api/")

    // 가져올 패키지 처리
    source = sourceSets.main.allJava.matching {
        // 포함
        include 'kr/co/itid/cms/service/**/*.java'
        include 'kr/co/itid/cms/controller/**/*.java'
        // 제외
        exclude 'kr/co/itid/cms/service/**/impl/**'
    }
}

// QueryDSL Q클래스 생성 경로
def querydslDir = "$buildDir/generated/querydsl"

// 다양한 Gradle 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
    maven {
        url 'https://maven.egovframe.go.kr/maven'
    }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Egov
    implementation 'org.egovframe.rte:org.egovframe.rte.ptl.mvc:4.2.0'
    implementation 'org.egovframe.rte:org.egovframe.rte.fdl.property:4.2.0'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

    // HTML Sanitizer
    implementation 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20211018.1'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:4.4.0'
    querydsl 'com.querydsl:querydsl-apt:4.4.0:jpa'
    querydsl 'com.querydsl:querydsl-codegen:4.4.0'  // 코드 생성 라이브러리 추가
    querydsl 'javax.annotation:javax.annotation-api:1.3.2'
    querydsl 'javax.persistence:javax.persistence-api:2.2'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //개발 환경
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

sourceSets {
    main {
        java {
            srcDirs += [querydslDir]
        }
    }
}

// QueryDSL Q클래스 생성 태스크
task generateQueryDSL(type: JavaCompile) {
    source = sourceSets.main.java
    classpath = configurations.querydsl
    options.annotationProcessorPath = configurations.querydsl
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = file(querydslDir)
}

// MapStruct 및 Lombok을 위한 컴파일 옵션
tasks.withType(JavaCompile) {
    if (it.name != 'generateQueryDSL') {
        it.options.compilerArgs += [
                "-Amapstruct.defaultComponentModel=spring",
                "-Amapstruct.suppressGeneratorTimestamp=true"
        ]
    }
}

// compileJava 태스크가 generateQueryDSL 태스크 이후에 실행되도록 설정
compileJava {
    dependsOn generateQueryDSL
}

// Clean 태스크에 생성된 소스 삭제 포함
clean {
    delete file(querydslDir)
}

// 디버깅을 위한 태스크 실행 정보 표시
tasks.withType(JavaCompile) {
    doFirst {
        if (it.name == 'generateQueryDSL') {
            println "QueryDSL classpath: ${configurations.querydsl.files}"
        }
    }
}

configurations.all {
    exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
}

tasks.named('test') {
    useJUnitPlatform()
}
